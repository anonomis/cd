// Generated by CoffeeScript 1.6.3
(function() {
  var Album, EventRouter, blockContextMenu, j, myElement,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  blockContextMenu = function(evt) {
    return evt.preventDefault();
  };

  myElement = document.querySelector('body');

  myElement.addEventListener('contextmenu', blockContextMenu);

  j = jQuery;

  EventRouter = (function() {
    function EventRouter() {
      this.on = __bind(this.on, this);
      var _this = this;
      j("body").bind("mousemove", function(e) {
        return _this.on("mousemove")(e);
      });
      j("body").bind("mouseup", function(e) {
        return _this.on("mouseup")(e);
      });
      j("body").bind("mouseclick", function(e) {
        if (event.button === 2) {
          this.on("mouseright")(e);
          return false;
        }
      });
    }

    EventRouter.prototype.on = function(type) {
      var _this = this;
      return function(e) {
        var action;
        action = _this["on" + type];
        if (action != null) {
          return action(e);
        }
      };
    };

    EventRouter.prototype.bind = function(type, f, obj) {
      return this["on" + type] = function(e) {
        return f.call(obj, e);
      };
    };

    EventRouter.prototype.unbind = function(type) {
      return this["on" + type] = null;
    };

    return EventRouter;

  })();

  window.eventRouter = new EventRouter();

  window.idIterator = 0;

  window.makeId = function() {
    return window.idIterator++;
  };

  Album = (function() {
    function Album(mockNo) {
      var _this = this;
      this.state = "closed";
      this.id = "album-" + makeId();
      j("body").append("<div class=\"positioner\" id=\"" + this.id + "\" rotation=\"0\">\n  <div class=\"ctx\">\n    <div class=\"cd\" >\n      <div class=\"case\">\n        <div class=\"ctx\">\n          <div class=\"back\">\n            <div class=\"ctx\">\n              <div class=\"top\"></div>\n              <div class=\"right\"></div>\n              <div class=\"bottom\"></div>\n            </div>\n          </div>\n          <div class=\"bar\">\n            <div class=\"ctx\">\n            <div class=\"ridge\"></div>\n            <div class=\"ridge\"></div>\n            <div class=\"ridge\"></div>\n            <div class=\"ridge\"></div>\n            <div class=\"ridge\"></div>\n            <div class=\"ridge\"></div>\n            <div class=\"ridge\"></div>\n            <div class=\"ridge\"></div>\n            </div>\n          </div>\n          <div class=\"tray\">\n            <div class='ctx'>\n              <div class=\"template\">\n\n              </div>\n            </div>\n          </div>\n          <div class=\"lid\">\n            <div class=\"cover mock no" + mockNo + "\"></div>\n            <div class=\"pressed\">\n              <div class='ctx'>\n              <div class=\"top\"></div>\n              <div class=\"right\"></div>\n              <div class=\"left\"></div>\n              <div class=\"bottom\"></div>\n              <div class=\"overlay\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n  </div>\n</div>");
      this.elem().mousedown(function(e) {
        return _this.mousedown(e);
      });
    }

    Album.prototype.mousedown = function(e) {
      var state,
        _this = this;
      console.log(event.button);
      if (event.button === 2) {
        eventRouter.bind("mousemove", this.rotateAlbum(), this);
        return eventRouter.bind("mouseup", function(e) {
          console.log("mouseup");
          return eventRouter.unbind("mousemove");
        });
      } else if (event.button === 0) {
        eventRouter.bind("mousemove", this.moveAlbum(e), this);
        return eventRouter.bind("mouseup", function(e) {
          console.log("mouseup");
          return eventRouter.unbind("mousemove");
        });
      } else {
        if (this.state === "closed") {
          this.elem().find(".lid").css({
            transform: "rotateY(180deg)"
          });
          this.state = "opening";
          state = function() {
            return _this.state = "open";
          };
          setTimeout(state, 1000);
        }
        if (this.state === "open") {
          this.elem().find(".lid").css({
            transform: "rotateY(0deg)"
          });
          this.state = "closing";
          state = function() {
            return _this.state = "closed";
          };
          return setTimeout(state, 1000);
        }
      }
    };

    Album.prototype.moveAlbum = function(ev) {
      var posX, posY, startX, startY;
      posX = this.elem().offset().left;
      posY = this.elem().offset().top;
      startX = ev.pageX;
      startY = ev.pageY;
      return function(e) {
        return this.elem().css({
          top: (posY + (e.pageY - startY)) + "px",
          left: (posX + (e.pageX - startX)) + "px"
        });
      };
    };

    Album.prototype.rotateAlbum = function() {
      var centerX, centerY, startAng;
      centerX = this.elem().offset().left + (this.elem().width() / 2);
      centerY = this.elem().offset().top + (this.elem().height() / 2);
      if (this.elem().attr("rotation") != null) {
        startAng = parseFloat(this.elem().attr("rotation"));
      } else {
        startAng = 90;
      }
      return function(ev) {
        var ang, deltaX, deltaY;
        deltaX = ev.pageX - centerX;
        deltaY = ev.pageY - centerY;
        if (Math.abs(deltaX) + Math.abs(deltaY) < 40) {
          ang = startAng;
        } else {
          ang = (Math.atan2(deltaY, deltaX) * 180 / Math.PI) + 90;
        }
        console.log(ev.pageY, ev.pageX, ang);
        this.elem().css({
          "transform": "rotate(" + ang + "deg)"
        });
        return this.elem().attr("rotation", ang);
      };
    };

    Album.prototype.elem = function() {
      return j("#" + this.id);
    };

    return Album;

  })();

  new Album(1);

  new Album(2);

}).call(this);

/*
//@ sourceMappingURL=main.map
*/
